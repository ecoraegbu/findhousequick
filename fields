-----------
PLEASE NOTE!
unless where specified, Any thing that displays from the data base would mostly be text. Every views page such as view tenant, or view property displays from the database. The important thing is the organization and arrangement of these components on the page. give allowance for component name, and component value (component refers to data from the database such as name. for example for a user whose first name is Emmanuel. the component name = First name, component value = Emmanuel) 
Any lists uses the table. you've already built that.
-----------
-------------------------------------------------------------------------------------------------------------------------
A. GENERAL COMPONENTS FOR THE MAIN ADMIN PANEL.
-------------------------------------------------------------------------------------------------------------------------
THE UI FOR THE ADMIN SHOULD BE DIVIDED INTO THE FOLLOWING CATEGORIES.
1. User Management:

* Add User: 
- Allows the administrator to add a new user.
- Use the update profile form but this time with the name and email fields present


* View Users: 
- Displays a list of all users and their basic information, such as name, email, and user role.
- Should have the view user button which would lead to the view user section
- Should have approve user button
- Should be able to sort users based on their location, user role, etc




2. Property Management:

* Add Property: 
- Allows the administrator to add a new property.
- Use add property page

* View Property:
- Allows the administrator to view a property.
- Use property preview page, but modify it to output the property information from the database( can have one style for text output which would be reusable)
- Should have a search form for finding specific properties based on the landlord, property id, etc.
- Should have a Delete Property button and an edit property button

* View Property List: 
- Displays a list of all properties and their basic information, such as address, price, and property type.
- Should be able to sort properties based on location, price, property type, property purpose(for sale or rent or lease or shortlet), and property status.
- Should have an Approve Property button, Delete property button and view property button
- shoud have check boxes in case we have to select multiple property for mass action.


* Edit Property: 
- Allows the administrator to edit a property's information, such as address, price, property type, and property images.
- Use update property page with additionally check boxes to mark property as unlisted etc.


3. Support and Communication:

* Tickets : (javascript will fetch the requested results from the database and display them.)
- Displays a list of open support tickets opened for each user complaints.
- Has the functionality to close open tickets by marking as closed.
- Can view history of tickets (past tickets) with the view closed tickets button.
please note that the closed tickets view and the open tickets view are the same

fields would include, name of client, text input form where the admin can write notes about steps taken to resolve issue or other important notes
name of admin who opened the ticket, ticket title or subject matter, buttons for closing tickets and editing tickets

* Messages: 
- read messages
- send messages
- write messages
- delete messages.

*   Complaints:
-   Users can send messages complaining about stuff to the admin. this would take higher priority than normal messages
- fields should include, subject, message and file attachment. the possibility to attach multiple files should be given just in case the user has more than one file to submit.

4. Transaction Management:

* View Payments: Displays a list of all transactions and their basic information, such as transaction date, amount, and payment status.
- View all transactions
- View individual transaction
- Invoice

Refund button: Allows the administrator to process a refund for a transaction.

5. Analytics and Reporting:
(we would get to this later on)

Traffic Analytics chart: Displays a graph of site traffic and user engagement over time.
User Analytics table: Displays a list of user behavior metrics, such as login frequency, property views, and transaction history.
Export Data button: Allows the administrator to export data from the dashboard in various formats, such as CSV or Excel.

6. Security and Privacy:
update security policy (leave this)
--------------------
B. SPECIFIC PAGES
-------------------
THE FOLLOWING ARE SPECIFIC PAGES THAT SHOULD BE BUILT. MOST SPECIFIC PAGES ARE REUSABLE WITH FEW ALTERATIONS DEPENDING ON THE AUTHORIZATION LEVEL OR USER ROLE.

1. View User
2. Edit User
3. Update profile form (similar to the edit user, but this is actually for the admin staff himself)
4. View profile (Data from database, but would have an image/avatar)
5. Edit profile page
6. Add property page
7. Property preview page (data from database, but would have pictures of the property)
8. Update property
9. list pages use the form for listing which you have already built.
10. Invoice/receipt
11. view payments (for all payments, use the table already existing, action buttons are "view transaction", and "process refund")
12. view transaction (for individual payments)



-----------------------
C. FIELDS FOR THE PAGES
-----------------------
//PROFILE FIELDS
First Name
Middle Name
Last Name
Email Address (read only)
Change password button
Date of Birth
Gender
Phone Number
Marital Status
Employment Status (dropdown, if employed is selected, fields for Job type, Work Address, and Employer details activates )
Religion
Address
City
State (dropdown)
local government area (dropdown)
Country
Profile Picture/Avatar
Edit profile (button)

//PROPERTY FIELDS
property type (dropdown, if others is selected, field for text input with default value "enter property type" activates)
Address
city
state
local government area
status (dropdown, (available, occupied))
purpose(dropdown,(for sale, for rent, for lease, for shortlet))
description(text field)
price
number of bedrooms
number of toilets
number of bathrooms
other features
image form fields with name field

//View Tenants would display from the data base
Tenant Details such as full names, email adress, phone number, (all those details collected in the update profile )
tenants image/avatar
tenancy details such as date tenancy commenced, date tenancy expires, apartment occupied, rent amount, notices issued, view messages








User Profile Page: Allows the administrator to view detailed information about a specific user, such as their name, email address, contact information, and account status.

User Information Form Fields: Allows the administrator to edit and update the user's information, such as their name, email address, phone number, and mailing address.

User Roles and Permissions: Allows the administrator to view and manage the user's role and permissions within the web app, such as granting or revoking agent or landlord privileges.

Login History: Allows the administrator to view the user's login history, including their login date and time, IP address, and device information.

User Activity Logs: Allows the administrator to view a log of the user's activity within the web app, such as their property listings, transactions, and support tickets.

Account Status: Allows the administrator to change the user's account status, such as activating or deactivating the account, or suspending the account for violating the web app's terms and conditions.

Delete User Account: Allows the administrator to delete the user's account and all associated data from the web app, if necessary.
* View User: 
- Allows the administrator to view a specific user. 
- Use the same form as the view profile.
- Have buttons for user control such as block user, delete user, edit user etc.
- Additionally, should have a search form where a user can be found by username, email, or names. and search results displayed. 
- Should also display additional details such as the users role, and other things, (can't remember them right now.)
- The edit user button would lead to the edit user page

* Edit User: 
- Allows the administrator to edit a user's information, such as name, email, password, and user role.
- Use the edit profile page
- Additionally, add a few buttons for assigning roles, etc.